<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.linlinjava.litemall.db.dao.PetMapper">
  <resultMap id="BaseResultMap" type="org.linlinjava.litemall.db.domain.Pet">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="index" jdbcType="INTEGER" property="index" />
    <result column="level_req" jdbcType="INTEGER" property="levelReq" />
    <result column="life" jdbcType="INTEGER" property="life" />
    <result column="mana" jdbcType="INTEGER" property="mana" />
    <result column="speed" jdbcType="INTEGER" property="speed" />
    <result column="phy_attack" jdbcType="INTEGER" property="phyAttack" />
    <result column="mag_attack" jdbcType="INTEGER" property="magAttack" />
    <result column="polar" jdbcType="VARCHAR" property="polar" />
    <result column="skiils" jdbcType="VARCHAR" property="skiils" />
    <result column="zoon" jdbcType="VARCHAR" property="zoon" />
    <result column="icon" jdbcType="INTEGER" property="icon" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `index`, level_req, life, mana, speed, phy_attack, mag_attack, polar, skiils, 
    zoon, icon, add_time, update_time, deleted, `name`
  </sql>
  <select id="selectByExample" parameterType="org.linlinjava.litemall.db.domain.example.PetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, `index`, level_req, life, mana, speed, phy_attack, mag_attack, polar, skiils, 
          zoon, icon, add_time, update_time, deleted, `name`
      </otherwise>
    </choose>
    from pet
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pet
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeyWithLogicalDelete" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select 
    <include refid="Base_Column_List" />
    from pet
    where id = #{id,jdbcType=INTEGER}
      and deleted = 
    <choose>
      <when test="andLogicalDeleted">
        1
      </when>
      <otherwise>
        0
      </otherwise>
    </choose>
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, `index`, level_req, life, mana, speed, phy_attack, mag_attack, polar, skiils, 
          zoon, icon, add_time, update_time, deleted, `name`
      </otherwise>
    </choose>
    from pet
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pet
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.linlinjava.litemall.db.domain.example.PetExample">
    delete from pet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.linlinjava.litemall.db.domain.Pet">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pet (`index`, level_req, life, 
      mana, speed, phy_attack, 
      mag_attack, polar, skiils, 
      zoon, icon, add_time, 
      update_time, deleted, `name`
      )
    values (#{index,jdbcType=INTEGER}, #{levelReq,jdbcType=INTEGER}, #{life,jdbcType=INTEGER}, 
      #{mana,jdbcType=INTEGER}, #{speed,jdbcType=INTEGER}, #{phyAttack,jdbcType=INTEGER}, 
      #{magAttack,jdbcType=INTEGER}, #{polar,jdbcType=VARCHAR}, #{skiils,jdbcType=VARCHAR}, 
      #{zoon,jdbcType=VARCHAR}, #{icon,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT}, #{name,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.linlinjava.litemall.db.domain.Pet">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="index != null">
        `index`,
      </if>
      <if test="levelReq != null">
        level_req,
      </if>
      <if test="life != null">
        life,
      </if>
      <if test="mana != null">
        mana,
      </if>
      <if test="speed != null">
        speed,
      </if>
      <if test="phyAttack != null">
        phy_attack,
      </if>
      <if test="magAttack != null">
        mag_attack,
      </if>
      <if test="polar != null">
        polar,
      </if>
      <if test="skiils != null">
        skiils,
      </if>
      <if test="zoon != null">
        zoon,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="name != null">
        `name`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="index != null">
        #{index,jdbcType=INTEGER},
      </if>
      <if test="levelReq != null">
        #{levelReq,jdbcType=INTEGER},
      </if>
      <if test="life != null">
        #{life,jdbcType=INTEGER},
      </if>
      <if test="mana != null">
        #{mana,jdbcType=INTEGER},
      </if>
      <if test="speed != null">
        #{speed,jdbcType=INTEGER},
      </if>
      <if test="phyAttack != null">
        #{phyAttack,jdbcType=INTEGER},
      </if>
      <if test="magAttack != null">
        #{magAttack,jdbcType=INTEGER},
      </if>
      <if test="polar != null">
        #{polar,jdbcType=VARCHAR},
      </if>
      <if test="skiils != null">
        #{skiils,jdbcType=VARCHAR},
      </if>
      <if test="zoon != null">
        #{zoon,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.linlinjava.litemall.db.domain.example.PetExample" resultType="java.lang.Long">
    select count(*) from pet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pet
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.index != null">
        `index` = #{record.index,jdbcType=INTEGER},
      </if>
      <if test="record.levelReq != null">
        level_req = #{record.levelReq,jdbcType=INTEGER},
      </if>
      <if test="record.life != null">
        life = #{record.life,jdbcType=INTEGER},
      </if>
      <if test="record.mana != null">
        mana = #{record.mana,jdbcType=INTEGER},
      </if>
      <if test="record.speed != null">
        speed = #{record.speed,jdbcType=INTEGER},
      </if>
      <if test="record.phyAttack != null">
        phy_attack = #{record.phyAttack,jdbcType=INTEGER},
      </if>
      <if test="record.magAttack != null">
        mag_attack = #{record.magAttack,jdbcType=INTEGER},
      </if>
      <if test="record.polar != null">
        polar = #{record.polar,jdbcType=VARCHAR},
      </if>
      <if test="record.skiils != null">
        skiils = #{record.skiils,jdbcType=VARCHAR},
      </if>
      <if test="record.zoon != null">
        zoon = #{record.zoon,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pet
    set id = #{record.id,jdbcType=INTEGER},
      `index` = #{record.index,jdbcType=INTEGER},
      level_req = #{record.levelReq,jdbcType=INTEGER},
      life = #{record.life,jdbcType=INTEGER},
      mana = #{record.mana,jdbcType=INTEGER},
      speed = #{record.speed,jdbcType=INTEGER},
      phy_attack = #{record.phyAttack,jdbcType=INTEGER},
      mag_attack = #{record.magAttack,jdbcType=INTEGER},
      polar = #{record.polar,jdbcType=VARCHAR},
      skiils = #{record.skiils,jdbcType=VARCHAR},
      zoon = #{record.zoon,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT},
      `name` = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.linlinjava.litemall.db.domain.Pet">
    update pet
    <set>
      <if test="index != null">
        `index` = #{index,jdbcType=INTEGER},
      </if>
      <if test="levelReq != null">
        level_req = #{levelReq,jdbcType=INTEGER},
      </if>
      <if test="life != null">
        life = #{life,jdbcType=INTEGER},
      </if>
      <if test="mana != null">
        mana = #{mana,jdbcType=INTEGER},
      </if>
      <if test="speed != null">
        speed = #{speed,jdbcType=INTEGER},
      </if>
      <if test="phyAttack != null">
        phy_attack = #{phyAttack,jdbcType=INTEGER},
      </if>
      <if test="magAttack != null">
        mag_attack = #{magAttack,jdbcType=INTEGER},
      </if>
      <if test="polar != null">
        polar = #{polar,jdbcType=VARCHAR},
      </if>
      <if test="skiils != null">
        skiils = #{skiils,jdbcType=VARCHAR},
      </if>
      <if test="zoon != null">
        zoon = #{zoon,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.linlinjava.litemall.db.domain.Pet">
    update pet
    set `index` = #{index,jdbcType=INTEGER},
      level_req = #{levelReq,jdbcType=INTEGER},
      life = #{life,jdbcType=INTEGER},
      mana = #{mana,jdbcType=INTEGER},
      speed = #{speed,jdbcType=INTEGER},
      phy_attack = #{phyAttack,jdbcType=INTEGER},
      mag_attack = #{magAttack,jdbcType=INTEGER},
      polar = #{polar,jdbcType=VARCHAR},
      skiils = #{skiils,jdbcType=VARCHAR},
      zoon = #{zoon,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT},
      `name` = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="org.linlinjava.litemall.db.domain.example.PetExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from pet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, `index`, level_req, life, mana, speed, phy_attack, mag_attack, polar, skiils, 
          zoon, icon, add_time, update_time, deleted, `name`
      </otherwise>
    </choose>
    from pet
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <update id="logicalDeleteByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update pet set deleted = 1
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update pet set deleted = 1
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>