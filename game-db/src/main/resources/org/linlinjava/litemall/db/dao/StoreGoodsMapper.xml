<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.linlinjava.litemall.db.dao.StoreGoodsMapper">
  <resultMap id="BaseResultMap" type="org.linlinjava.litemall.db.domain.StoreGoods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="barcode" jdbcType="VARCHAR" property="barcode" />
    <result column="for_sale" jdbcType="INTEGER" property="forSale" />
    <result column="show_pos" jdbcType="INTEGER" property="showPos" />
    <result column="rpos" jdbcType="INTEGER" property="rpos" />
    <result column="sale_quota" jdbcType="INTEGER" property="saleQuota" />
    <result column="recommend" jdbcType="INTEGER" property="recommend" />
    <result column="coin" jdbcType="INTEGER" property="coin" />
    <result column="discount" jdbcType="INTEGER" property="discount" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="quota_limit" jdbcType="INTEGER" property="quotaLimit" />
    <result column="must_vip" jdbcType="INTEGER" property="mustVip" />
    <result column="is_gift" jdbcType="INTEGER" property="isGift" />
    <result column="follow_pet_type" jdbcType="INTEGER" property="followPetType" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, barcode, for_sale, show_pos, rpos, sale_quota, recommend, coin, discount, 
    `type`, quota_limit, must_vip, is_gift, follow_pet_type, add_time, update_time, deleted
  </sql>
  <select id="selectByExample" parameterType="org.linlinjava.litemall.db.domain.example.StoreGoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from store_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, `name`, barcode, for_sale, show_pos, rpos, sale_quota, recommend, coin, discount, 
          `type`, quota_limit, must_vip, is_gift, follow_pet_type, add_time, update_time, 
          deleted
      </otherwise>
    </choose>
    from store_goods
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from store_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeyWithLogicalDelete" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select 
    <include refid="Base_Column_List" />
    from store_goods
    where id = #{id,jdbcType=INTEGER}
      and deleted = 
    <choose>
      <when test="andLogicalDeleted">
        1
      </when>
      <otherwise>
        0
      </otherwise>
    </choose>
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, `name`, barcode, for_sale, show_pos, rpos, sale_quota, recommend, coin, discount, 
          `type`, quota_limit, must_vip, is_gift, follow_pet_type, add_time, update_time, 
          deleted
      </otherwise>
    </choose>
    from store_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from store_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.linlinjava.litemall.db.domain.example.StoreGoodsExample">
    delete from store_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.linlinjava.litemall.db.domain.StoreGoods">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into store_goods (`name`, barcode, for_sale, 
      show_pos, rpos, sale_quota, 
      recommend, coin, discount, 
      `type`, quota_limit, must_vip, 
      is_gift, follow_pet_type, add_time, 
      update_time, deleted)
    values (#{name,jdbcType=VARCHAR}, #{barcode,jdbcType=VARCHAR}, #{forSale,jdbcType=INTEGER}, 
      #{showPos,jdbcType=INTEGER}, #{rpos,jdbcType=INTEGER}, #{saleQuota,jdbcType=INTEGER}, 
      #{recommend,jdbcType=INTEGER}, #{coin,jdbcType=INTEGER}, #{discount,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{quotaLimit,jdbcType=INTEGER}, #{mustVip,jdbcType=INTEGER}, 
      #{isGift,jdbcType=INTEGER}, #{followPetType,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="org.linlinjava.litemall.db.domain.StoreGoods">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into store_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="barcode != null">
        barcode,
      </if>
      <if test="forSale != null">
        for_sale,
      </if>
      <if test="showPos != null">
        show_pos,
      </if>
      <if test="rpos != null">
        rpos,
      </if>
      <if test="saleQuota != null">
        sale_quota,
      </if>
      <if test="recommend != null">
        recommend,
      </if>
      <if test="coin != null">
        coin,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="quotaLimit != null">
        quota_limit,
      </if>
      <if test="mustVip != null">
        must_vip,
      </if>
      <if test="isGift != null">
        is_gift,
      </if>
      <if test="followPetType != null">
        follow_pet_type,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="forSale != null">
        #{forSale,jdbcType=INTEGER},
      </if>
      <if test="showPos != null">
        #{showPos,jdbcType=INTEGER},
      </if>
      <if test="rpos != null">
        #{rpos,jdbcType=INTEGER},
      </if>
      <if test="saleQuota != null">
        #{saleQuota,jdbcType=INTEGER},
      </if>
      <if test="recommend != null">
        #{recommend,jdbcType=INTEGER},
      </if>
      <if test="coin != null">
        #{coin,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="quotaLimit != null">
        #{quotaLimit,jdbcType=INTEGER},
      </if>
      <if test="mustVip != null">
        #{mustVip,jdbcType=INTEGER},
      </if>
      <if test="isGift != null">
        #{isGift,jdbcType=INTEGER},
      </if>
      <if test="followPetType != null">
        #{followPetType,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.linlinjava.litemall.db.domain.example.StoreGoodsExample" resultType="java.lang.Long">
    select count(*) from store_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update store_goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.barcode != null">
        barcode = #{record.barcode,jdbcType=VARCHAR},
      </if>
      <if test="record.forSale != null">
        for_sale = #{record.forSale,jdbcType=INTEGER},
      </if>
      <if test="record.showPos != null">
        show_pos = #{record.showPos,jdbcType=INTEGER},
      </if>
      <if test="record.rpos != null">
        rpos = #{record.rpos,jdbcType=INTEGER},
      </if>
      <if test="record.saleQuota != null">
        sale_quota = #{record.saleQuota,jdbcType=INTEGER},
      </if>
      <if test="record.recommend != null">
        recommend = #{record.recommend,jdbcType=INTEGER},
      </if>
      <if test="record.coin != null">
        coin = #{record.coin,jdbcType=INTEGER},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.quotaLimit != null">
        quota_limit = #{record.quotaLimit,jdbcType=INTEGER},
      </if>
      <if test="record.mustVip != null">
        must_vip = #{record.mustVip,jdbcType=INTEGER},
      </if>
      <if test="record.isGift != null">
        is_gift = #{record.isGift,jdbcType=INTEGER},
      </if>
      <if test="record.followPetType != null">
        follow_pet_type = #{record.followPetType,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update store_goods
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      barcode = #{record.barcode,jdbcType=VARCHAR},
      for_sale = #{record.forSale,jdbcType=INTEGER},
      show_pos = #{record.showPos,jdbcType=INTEGER},
      rpos = #{record.rpos,jdbcType=INTEGER},
      sale_quota = #{record.saleQuota,jdbcType=INTEGER},
      recommend = #{record.recommend,jdbcType=INTEGER},
      coin = #{record.coin,jdbcType=INTEGER},
      discount = #{record.discount,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=INTEGER},
      quota_limit = #{record.quotaLimit,jdbcType=INTEGER},
      must_vip = #{record.mustVip,jdbcType=INTEGER},
      is_gift = #{record.isGift,jdbcType=INTEGER},
      follow_pet_type = #{record.followPetType,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.linlinjava.litemall.db.domain.StoreGoods">
    update store_goods
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="forSale != null">
        for_sale = #{forSale,jdbcType=INTEGER},
      </if>
      <if test="showPos != null">
        show_pos = #{showPos,jdbcType=INTEGER},
      </if>
      <if test="rpos != null">
        rpos = #{rpos,jdbcType=INTEGER},
      </if>
      <if test="saleQuota != null">
        sale_quota = #{saleQuota,jdbcType=INTEGER},
      </if>
      <if test="recommend != null">
        recommend = #{recommend,jdbcType=INTEGER},
      </if>
      <if test="coin != null">
        coin = #{coin,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="quotaLimit != null">
        quota_limit = #{quotaLimit,jdbcType=INTEGER},
      </if>
      <if test="mustVip != null">
        must_vip = #{mustVip,jdbcType=INTEGER},
      </if>
      <if test="isGift != null">
        is_gift = #{isGift,jdbcType=INTEGER},
      </if>
      <if test="followPetType != null">
        follow_pet_type = #{followPetType,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.linlinjava.litemall.db.domain.StoreGoods">
    update store_goods
    set `name` = #{name,jdbcType=VARCHAR},
      barcode = #{barcode,jdbcType=VARCHAR},
      for_sale = #{forSale,jdbcType=INTEGER},
      show_pos = #{showPos,jdbcType=INTEGER},
      rpos = #{rpos,jdbcType=INTEGER},
      sale_quota = #{saleQuota,jdbcType=INTEGER},
      recommend = #{recommend,jdbcType=INTEGER},
      coin = #{coin,jdbcType=INTEGER},
      discount = #{discount,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER},
      quota_limit = #{quotaLimit,jdbcType=INTEGER},
      must_vip = #{mustVip,jdbcType=INTEGER},
      is_gift = #{isGift,jdbcType=INTEGER},
      follow_pet_type = #{followPetType,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="org.linlinjava.litemall.db.domain.example.StoreGoodsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from store_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, `name`, barcode, for_sale, show_pos, rpos, sale_quota, recommend, coin, discount, 
          `type`, quota_limit, must_vip, is_gift, follow_pet_type, add_time, update_time, 
          deleted
      </otherwise>
    </choose>
    from store_goods
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <update id="logicalDeleteByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update store_goods set deleted = 1
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update store_goods set deleted = 1
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>