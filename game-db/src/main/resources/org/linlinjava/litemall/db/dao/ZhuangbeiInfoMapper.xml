<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.linlinjava.litemall.db.dao.ZhuangbeiInfoMapper">
  <resultMap id="BaseResultMap" type="org.linlinjava.litemall.db.domain.ZhuangbeiInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="attrib" jdbcType="INTEGER" property="attrib" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="str" jdbcType="VARCHAR" property="str" />
    <result column="quality" jdbcType="VARCHAR" property="quality" />
    <result column="master" jdbcType="INTEGER" property="master" />
    <result column="metal" jdbcType="INTEGER" property="metal" />
    <result column="mana" jdbcType="INTEGER" property="mana" />
    <result column="accurate" jdbcType="INTEGER" property="accurate" />
    <result column="def" jdbcType="INTEGER" property="def" />
    <result column="dex" jdbcType="INTEGER" property="dex" />
    <result column="wiz" jdbcType="INTEGER" property="wiz" />
    <result column="parry" jdbcType="INTEGER" property="parry" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, attrib, amount, `type`, str, quality, master, metal, mana, accurate, def, dex, 
    wiz, parry, add_time, update_time, deleted
  </sql>
  <select id="selectByExample" parameterType="org.linlinjava.litemall.db.domain.example.ZhuangbeiInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zhuangbei_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, attrib, amount, `type`, str, quality, master, metal, mana, accurate, def, dex, 
          wiz, parry, add_time, update_time, deleted
      </otherwise>
    </choose>
    from zhuangbei_info
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zhuangbei_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeyWithLogicalDelete" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select 
    <include refid="Base_Column_List" />
    from zhuangbei_info
    where id = #{id,jdbcType=INTEGER}
      and deleted = 
    <choose>
      <when test="andLogicalDeleted">
        1
      </when>
      <otherwise>
        0
      </otherwise>
    </choose>
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, attrib, amount, `type`, str, quality, master, metal, mana, accurate, def, dex, 
          wiz, parry, add_time, update_time, deleted
      </otherwise>
    </choose>
    from zhuangbei_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from zhuangbei_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.linlinjava.litemall.db.domain.example.ZhuangbeiInfoExample">
    delete from zhuangbei_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.linlinjava.litemall.db.domain.ZhuangbeiInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into zhuangbei_info (attrib, amount, `type`, 
      str, quality, master, 
      metal, mana, accurate, 
      def, dex, wiz, parry, 
      add_time, update_time, deleted
      )
    values (#{attrib,jdbcType=INTEGER}, #{amount,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{str,jdbcType=VARCHAR}, #{quality,jdbcType=VARCHAR}, #{master,jdbcType=INTEGER}, 
      #{metal,jdbcType=INTEGER}, #{mana,jdbcType=INTEGER}, #{accurate,jdbcType=INTEGER}, 
      #{def,jdbcType=INTEGER}, #{dex,jdbcType=INTEGER}, #{wiz,jdbcType=INTEGER}, #{parry,jdbcType=INTEGER}, 
      #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.linlinjava.litemall.db.domain.ZhuangbeiInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into zhuangbei_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attrib != null">
        attrib,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="str != null">
        str,
      </if>
      <if test="quality != null">
        quality,
      </if>
      <if test="master != null">
        master,
      </if>
      <if test="metal != null">
        metal,
      </if>
      <if test="mana != null">
        mana,
      </if>
      <if test="accurate != null">
        accurate,
      </if>
      <if test="def != null">
        def,
      </if>
      <if test="dex != null">
        dex,
      </if>
      <if test="wiz != null">
        wiz,
      </if>
      <if test="parry != null">
        parry,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attrib != null">
        #{attrib,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="str != null">
        #{str,jdbcType=VARCHAR},
      </if>
      <if test="quality != null">
        #{quality,jdbcType=VARCHAR},
      </if>
      <if test="master != null">
        #{master,jdbcType=INTEGER},
      </if>
      <if test="metal != null">
        #{metal,jdbcType=INTEGER},
      </if>
      <if test="mana != null">
        #{mana,jdbcType=INTEGER},
      </if>
      <if test="accurate != null">
        #{accurate,jdbcType=INTEGER},
      </if>
      <if test="def != null">
        #{def,jdbcType=INTEGER},
      </if>
      <if test="dex != null">
        #{dex,jdbcType=INTEGER},
      </if>
      <if test="wiz != null">
        #{wiz,jdbcType=INTEGER},
      </if>
      <if test="parry != null">
        #{parry,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.linlinjava.litemall.db.domain.example.ZhuangbeiInfoExample" resultType="java.lang.Long">
    select count(*) from zhuangbei_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zhuangbei_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.attrib != null">
        attrib = #{record.attrib,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.str != null">
        str = #{record.str,jdbcType=VARCHAR},
      </if>
      <if test="record.quality != null">
        quality = #{record.quality,jdbcType=VARCHAR},
      </if>
      <if test="record.master != null">
        master = #{record.master,jdbcType=INTEGER},
      </if>
      <if test="record.metal != null">
        metal = #{record.metal,jdbcType=INTEGER},
      </if>
      <if test="record.mana != null">
        mana = #{record.mana,jdbcType=INTEGER},
      </if>
      <if test="record.accurate != null">
        accurate = #{record.accurate,jdbcType=INTEGER},
      </if>
      <if test="record.def != null">
        def = #{record.def,jdbcType=INTEGER},
      </if>
      <if test="record.dex != null">
        dex = #{record.dex,jdbcType=INTEGER},
      </if>
      <if test="record.wiz != null">
        wiz = #{record.wiz,jdbcType=INTEGER},
      </if>
      <if test="record.parry != null">
        parry = #{record.parry,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zhuangbei_info
    set id = #{record.id,jdbcType=INTEGER},
      attrib = #{record.attrib,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=INTEGER},
      str = #{record.str,jdbcType=VARCHAR},
      quality = #{record.quality,jdbcType=VARCHAR},
      master = #{record.master,jdbcType=INTEGER},
      metal = #{record.metal,jdbcType=INTEGER},
      mana = #{record.mana,jdbcType=INTEGER},
      accurate = #{record.accurate,jdbcType=INTEGER},
      def = #{record.def,jdbcType=INTEGER},
      dex = #{record.dex,jdbcType=INTEGER},
      wiz = #{record.wiz,jdbcType=INTEGER},
      parry = #{record.parry,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.linlinjava.litemall.db.domain.ZhuangbeiInfo">
    update zhuangbei_info
    <set>
      <if test="attrib != null">
        attrib = #{attrib,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="str != null">
        str = #{str,jdbcType=VARCHAR},
      </if>
      <if test="quality != null">
        quality = #{quality,jdbcType=VARCHAR},
      </if>
      <if test="master != null">
        master = #{master,jdbcType=INTEGER},
      </if>
      <if test="metal != null">
        metal = #{metal,jdbcType=INTEGER},
      </if>
      <if test="mana != null">
        mana = #{mana,jdbcType=INTEGER},
      </if>
      <if test="accurate != null">
        accurate = #{accurate,jdbcType=INTEGER},
      </if>
      <if test="def != null">
        def = #{def,jdbcType=INTEGER},
      </if>
      <if test="dex != null">
        dex = #{dex,jdbcType=INTEGER},
      </if>
      <if test="wiz != null">
        wiz = #{wiz,jdbcType=INTEGER},
      </if>
      <if test="parry != null">
        parry = #{parry,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.linlinjava.litemall.db.domain.ZhuangbeiInfo">
    update zhuangbei_info
    set attrib = #{attrib,jdbcType=INTEGER},
      amount = #{amount,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER},
      str = #{str,jdbcType=VARCHAR},
      quality = #{quality,jdbcType=VARCHAR},
      master = #{master,jdbcType=INTEGER},
      metal = #{metal,jdbcType=INTEGER},
      mana = #{mana,jdbcType=INTEGER},
      accurate = #{accurate,jdbcType=INTEGER},
      def = #{def,jdbcType=INTEGER},
      dex = #{dex,jdbcType=INTEGER},
      wiz = #{wiz,jdbcType=INTEGER},
      parry = #{parry,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="org.linlinjava.litemall.db.domain.example.ZhuangbeiInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from zhuangbei_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, attrib, amount, `type`, str, quality, master, metal, mana, accurate, def, dex, 
          wiz, parry, add_time, update_time, deleted
      </otherwise>
    </choose>
    from zhuangbei_info
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <update id="logicalDeleteByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update zhuangbei_info set deleted = 1
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update zhuangbei_info set deleted = 1
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>